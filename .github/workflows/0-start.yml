name: Step 0, Start

# This step triggers after the learner creates a new repository from the template
# This step sets STEP to 1
# This step closes <details id=0> and opens <details id=1>

# This will run every time we create push a commit to `main`
# Reference https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  # Need `contents: read` to checkout the repository
  # Need `contents: write` to update the step metadata
  contents: write

jobs:
  check-merge-script:
    name: Test macos stat
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check if the PR is mergeable
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: check-mergeable
        with:
          script: |
            const pullRequestNumber = context.payload.pull_request.number;
            const { data: pullRequest } = await github.rest.pulls.get({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: pullRequestNumber
                  });
            console.log(pullRequest);
            console.log(pullRequest.mergeable_state);
            console.log(pullRequest.mergeable);
            return `${pullRequest.mergeable_state}`;
          result-encoding: string
      - name: When ok
        if: ${{ steps.check-mergeable.outputs.result == 'clean' }}
        run: echo "OK ${{steps.check-mergeable.outputs.result}} ${{github.event.pull_request.pull_request.html_url}}"
      - name: When ko
        if: ${{ steps.check-mergeable.outputs.result != 'clean' }}
        run: echo "KO ${{steps.check-mergeable.outputs.result}} ${{github.event.pull_request.pull_request.html_url}}"

  list_labels:
    runs-on: ubuntu-latest
    steps:
      - name: listPRLabels
        run: |
          labels="${{join(github.event.pull_request.labels.*.name, ' ')}}"
          for label in $labels; do
            echo "label is $label"
          done

  add_label:
    if: github.actor == 'dependabot[bot]'
    permissions:
      pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: get_step
        run: |
          git branch
          echo "current_step=$(cat ./.github/script/STEP)" >> $GITHUB_OUTPUT
      - name: Add label
        run: gh pr edit ${{ github.event.number }} --add-label "bug"
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}
